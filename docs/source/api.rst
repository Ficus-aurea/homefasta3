API — Подробно
===============

:muted:`Ниже приведены полные описания классов и их методов. Каждый метод описан: назначение, аргументы, возвращаемое значение, пример.`

Класс Seq
---------

**Назначение:** представляет одну запись FASTA — хранит заголовок и последовательность.

Инициализация
~~~~~~~~~~~~~

.. code-block:: python

   Seq(title: str, sequence: str)

.. list-table::
   :header-rows: 1
   
   * - Аргумент
     - Описание
   * - title
     - Строка — заголовок записи (без символа ``>``)
   * - sequence
     - Строка — последовательность; пробелы/переносы будут удалены; приведётся к верхнему регистру

Методы
~~~~~~

__len__
^^^^^^^^

.. code-block:: python

   __len__(self) -> int

Возвращает длину последовательности (количество символов).

.. code-block:: python

   len_sequence = len(sequence)

__str__
^^^^^^^

.. code-block:: python

   __str__(self) -> str

Возвращает запись в формате FASTA — строка с заголовком (``>title``) и секцией последовательности, разбитой по 70 символов.

.. code-block:: python

   print(sequence)  # выведет FASTA-блок

alphabet
^^^^^^^^

.. code-block:: python

   alphabet(self) -> str

Определяет алфавит последовательности. Возвращает одну из строк: ``'nucleotide'``, ``'protein'`` или ``'unknown'``.

**Алгоритм (суть):** собирается множество символов в последовательности, сравнивается с предопределёнными множествами символов для нуклеотидов и белков; при смешении применяется простая эвристика по вхождению символов.

.. code-block:: python

   type_sequence = sequence.alphabet()
   # 'nucleotide' или 'protein' или 'unknown'

Пример полного использования
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

   seq = Seq("seq1", "ACGTACGTN")
   print(len(seq))        # 9
   print(seq.alphabet())  # 'nucleotide'
   print(str(seq))

Класс FastaReader
-----------------

**Назначение:** читать FASTA-файл построчно и возвращать объекты ``Seq``. Поддерживает большие файлы за счёт генератора (yield).

Инициализация
~~~~~~~~~~~~~

.. code-block:: python

   FastaReader(filename: str)

.. list-table::
   :header-rows: 1
   
   * - Аргумент
     - Описание
   * - filename
     - Путь к файлу FASTA (строка). Поддержка gzip в базовой версии не реализована — можно расширить проверкой расширения и использованием ``gzip.open``

Методы
~~~~~~

is_fasta
^^^^^^^^

.. code-block:: python

   is_fasta(self) -> bool

Быстрая проверка: читает первые непустые строки файла и возвращает ``True``, если первая непустая строка начинается с символа ``>``. Полезно для ранней валидации входа.

.. code-block:: python

   reader = FastaReader('example.fasta')
   if reader.is_fasta():
       ...

__iter__
^^^^^^^^

.. code-block:: python

   __iter__(self)

Итератор: позволяет писать:

.. code-block:: python

   for i in FastaReader('file.fasta'):
       # i — объект Seq
       print(i.title)

**Реализация:** файл читается построчно, при встрече новой строки-заголовка (``>``) предыдущая запись собирается и отдается через ``yield``. В конце файла последняя запись тоже возвращается.

Поведение при ошибках
~~~~~~~~~~~~~~~~~~~~~

:muted:`Базовая реализация не бросает исключения при синтаксических ошибках внутри FASTA — предполагается, что файл корректен. Рекомендуется оборачивать работу в` ``try/except`` :muted:`при работе с внешними данными.`

Пример
~~~~~~

.. code-block:: python

   reader = FastaReader('example.fasta')
   for i in reader:
       print(i)  # печатает всю запись в FASTA-формате

UML диаграмма
-------------

.. figure:: /_static/uml.svg
   :width: 100%
   :alt: UML диаграмма классов

   Отношения между классами Seq и FastaReader

